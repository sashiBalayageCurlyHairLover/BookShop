@using BookShop.Core.Models
@using BookShop.Core.Services
@using BookShop.Infrastructure.Data.Models
@inject PenService service
@model List<PenBuyer>
@{
	ViewBag.Title = "Bought pens";

	List<PenViewModel> pens = new List<PenViewModel>();

	foreach (var entity in Model)
	{
		var pen = await service.GetByIdAsync(entity.PenId);

		pens.Add(pen);
	}
}

<h1 class="text-center">Bought pens</h1>
<br />
@if (Model.Count > 0)
{
	<div class="text-center">
		@foreach (var pen in pens)
		{
			<div class="card" style="width: 18rem;display:block;margin-left: auto; margin-right:auto;display:inline-flex">
				<div class="card-body">
					<h5 class="card-title">Color: @pen.PenColor</h5>
					<h6 class="card-subtitle mb-2 text-body-secondary">Ink capacity: @pen.InkCapacity</h6>
					<p class="card-subtitle mb-2 text-body-secondary">Manufacturer: @pen.Manufacturer</p>
					<form>
						<button type="submit" name="id" value="@pen.Id" asp-controller="Pen" asp-action="Sell" class="btn btn-warning">Sell</button>
					</form>
				</div>
			</div>
		}
	</div>
}
else
{
	<p class="text-center">No bought pens yet!</p>
}

